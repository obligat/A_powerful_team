{"version":3,"sources":["webpack.config.js"],"names":[],"mappings":";;AAAA,IAAI,oBAAoB,QAAQ,6BAAR,CAAxB;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;;AAEA,OAAO,OAAP,GAAiB;AACf,SAAO;AACL,YAAQ,CAAC,OAAD,EAAU,WAAV,EAAuB,iDAAvB,CADH;AAEL,WAAO,CAAC,oBAAD,EAAuB,0BAAvB;AAFF,GADQ;AAKf,UAAQ;AACN,UAAM,QAAQ,MAAR,EAAgB,OAAhB,CAAwB,eAAxB,CADA;AAEN,cAAU;AAFJ,GALO;AASf,UAAQ;AACN,aAAS,CACP;AACE,YAAM,OADR;AAEE,cAAQ,cAFV;AAGE,eAAS,cAHX;AAIE,aAAO;AACL,iBAAS,CAAC,QAAD,EAAW,OAAX;AADJ;AAJT,KADO,EASP;AACE,YAAM,QADR;AAEE,cAAQ,kBAAkB,OAAlB,CAA0B,EAAE,UAAU,cAAZ,EAA4B,KAAK,YAAjC,EAA1B;AAFV,KATO,EAaP,EAAC,MAAM,qCAAP,EAA8C,QAAQ,gDAAtD,EAbO,EAcP,EAAC,MAAM,4BAAP,EAAqC,QAAQ,mDAA7C,EAdO,EAeP,EAAC,MAAM,4BAAP,EAAqC,QAAQ,MAA7C,EAfO,EAgBP,EAAC,MAAM,4BAAP,EAAqC,QAAQ,wCAA7C,EAhBO;AADH,GATO;AA6Bf,WAAS,mBA7BM;AA8Bf,WAAS,CACP,IAAI,iBAAJ,CAAsB,YAAtB,CADO,EAEP,IAAI,QAAQ,QAAR,CAAiB,kBAArB,CAAwC,EAAE,MAAM,QAAR,EAAkB,UAAU,kBAA5B,EAAxC,CAFO;AA9BM,CAAjB","file":"webpack.config-compiled.js","sourcesContent":["var ExtractTextPlugin = require(\"extract-text-webpack-plugin\");\nvar webpack = require(\"webpack\");\n\nmodule.exports = {\n  entry: {\n    vendor: [\"react\", \"react-dom\", \"./node_modules/bootstrap/dist/css/bootstrap.css\"],\n    index: [\"./public/src/index\", \"./public/style/index.css\"]\n  },\n  output: {\n    path: require('path').resolve(\"./public/dist\"),\n    filename: \"[name].js\"\n  },\n  module: {\n    loaders: [\n      {\n        test: /\\.js$/,\n        loader: 'babel-loader',\n        exclude: /node_modules/,\n        query: {\n          presets: ['es2015', 'react']\n        }\n      },\n      {\n        test: /\\.css$/, \n        loader: ExtractTextPlugin.extract({ fallback: 'style-loader', use: 'css-loader' })\n      },\n      {test: /\\.(woff|woff2)(\\?v=\\d+\\.\\d+\\.\\d+)?$/, loader: 'url?limit=10000&mimetype=application/font-woff'},\n      {test: /\\.ttf(\\?v=\\d+\\.\\d+\\.\\d+)?$/, loader: 'url?limit=10000&mimetype=application/octet-stream'},\n      {test: /\\.eot(\\?v=\\d+\\.\\d+\\.\\d+)?$/, loader: 'file'},\n      {test: /\\.svg(\\?v=\\d+\\.\\d+\\.\\d+)?$/, loader: 'url?limit=10000&mimetype=image/svg+xml'}\n    ]\n  },\n  devtool: \"#cheap-source-map\",\n  plugins: [\n    new ExtractTextPlugin(\"[name].css\"),\n    new webpack.optimize.CommonsChunkPlugin({ name: 'vendor', filename: 'vendor.bundle.js' })\n  ]\n};"]}